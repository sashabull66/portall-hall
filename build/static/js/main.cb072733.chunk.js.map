{"version":3,"sources":["Portal.js","App.js","reportWebVitals.js","index.js"],"names":["Portal","children","title","useState","document","createElement","div","newWindow","useRef","useEffect","current","window","open","body","appendChild","querySelectorAll","forEach","x","head","cloneNode","close","createPortal","App","id","inPortal","list","setList","hideElement","newList","map","el","showElement","deleteElement","prevList","filter","style","border","onClick","bind","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0KAGaA,EAAS,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAAW,EAC3BC,mBAASC,SAASC,cAAc,QAAvCC,EADkC,oBAErCC,EAAYC,iBAAO,MAWvB,OAVAC,qBAAU,WAON,OANAF,EAAUG,QAAUC,OAAOC,KAAK,GAAG,GAAG,yCACtCL,EAAUG,QAAQN,SAASS,KAAKC,YAAYR,GAC5CC,EAAUG,QAAQN,SAASF,MAAQA,EACnCE,SAASW,iBAAiB,eAAeC,SAAQ,SAAAC,GAC7CV,EAAUG,QAAQN,SAASc,KAAKJ,YAAYG,EAAEE,WAAU,OAErD,kBAAMZ,EAAUG,SAAWH,EAAUG,QAAQU,YAGjDC,uBAAapB,EAAUK,I,OC4CnBgB,MAzDf,WAAgB,IAAD,EAEWnB,mBAAS,CAC/B,CAACoB,GAAG,IAAKrB,MAAM,QAASsB,UAAS,GACjC,CAACD,GAAG,IAAKrB,MAAM,QAASsB,UAAS,GACjC,CAACD,GAAG,IAAKrB,MAAM,UAAWsB,UAAS,GACnC,CAACD,GAAG,IAAKrB,MAAM,QAASsB,UAAS,GACjC,CAACD,GAAG,IAAKrB,MAAM,QAASsB,UAAS,KAPtB,mBAENC,EAFM,KAEAC,EAFA,KAUPC,EAAc,SAACJ,GACnB,IAAIK,EAAUH,EAAKI,KAAI,SAAAC,GAIrB,OAHIA,EAAGP,KAAOA,IACZO,EAAGN,UAAYM,EAAGN,UAEbM,KAETJ,EAAQE,IAGJG,EAAc,SAAC7B,GACnB,IAAI0B,EAAUH,EAAKI,KAAI,SAAAC,GAIrB,OAHIA,EAAG5B,QAAUA,IACf4B,EAAGN,UAAW,GAETM,KAETJ,EAAQE,IAGJI,EAAgB,SAACT,GACrBG,GAAQ,SAAAO,GAAQ,OAAEA,EAASC,QAAO,SAAAJ,GAAE,OAAEA,EAAGP,KAAOA,SAGlD,OACE,gCACE,6BACGE,EAAKS,QAAO,SAAAJ,GAAE,OAAGA,EAAGN,YAAUK,KAAI,SAAAC,GAAE,OAAE,oBAAIK,MAAO,CAACC,OAAO,mBAAgCC,QAASV,EAAYW,KAAK,KAAMR,EAAGP,GAAIO,EAAG5B,OAA7F,SAAsG4B,EAAG5B,OAA7D4B,EAAGP,SAItFE,EAAKS,QAAO,SAAAJ,GAAE,OAAEA,EAAGN,YAAUK,KAAI,SAAAC,GAAE,OAC3B,cAAC,EAAD,CAAQ5B,MAAO4B,EAAG5B,MAAlB,SACE,gCACE,4BAAI4B,EAAG5B,QACP,gCACE,wBAAQmC,QAASN,EAAYO,KAAK,KAAMR,EAAG5B,OAA3C,oBACA,wBAAQmC,QAASL,EAAcM,KAAK,KAAMR,EAAGP,IAA7C,0BALwBO,EAAGP,WCjClCgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9C,SAAS+C,eAAe,SAM1BZ,K","file":"static/js/main.cb072733.chunk.js","sourcesContent":["import {useEffect, useRef, useState} from \"react\";\nimport {createPortal} from \"react-dom\";\n\nexport const Portal = ({children, title}) => {\n    const [div] = useState(document.createElement('div'))\n    let newWindow = useRef(null)\n    useEffect(() => {\n        newWindow.current = window.open(\"\",\"\",\"width=300,height=300,left=250,top=200\");\n        newWindow.current.document.body.appendChild(div);\n        newWindow.current.document.title = title\n        document.querySelectorAll('style, link').forEach(x => {\n            newWindow.current.document.head.appendChild(x.cloneNode(true))\n        })\n        return () => newWindow.current && newWindow.current.close()\n    })\n\n    return createPortal(children, div)\n}","import {useState} from \"react\";\nimport {Portal} from \"./Portal\";\n\nfunction App() {\n\n  const [list, setList] = useState([\n    {id:'1', title:'Sasha', inPortal:false},\n    {id:'2', title:'Masha', inPortal:false},\n    {id:'3', title:'Natasha', inPortal:false},\n    {id:'4', title:'Gosha', inPortal:false},\n    {id:'5', title:'Misha', inPortal:false},\n  ])\n\n  const hideElement = (id) => {\n    let newList = list.map(el=>{\n      if (el.id === id) {\n        el.inPortal = !el.inPortal\n      }\n      return el\n    })\n    setList(newList)\n  }\n\n  const showElement = (title) => {\n    let newList = list.map(el=>{\n      if (el.title === title) {\n        el.inPortal = false\n      }\n      return el\n    })\n    setList(newList)\n  }\n\n  const deleteElement = (id) => {\n    setList(prevList=>prevList.filter(el=>el.id !== id))\n  }\n\n  return (\n    <div>\n      <ol>\n        {list.filter(el=>!el.inPortal).map(el=><li style={{border:'1px solid green'}} key={el.id} onClick={hideElement.bind(null, el.id, el.title)}>{el.title}</li>)}\n      </ol>\n\n      {\n        list.filter(el=>el.inPortal).map(el=>\n                <Portal title={el.title} key={el.id}>\n                  <div>\n                    <p>{el.title}</p>\n                    <div>\n                      <button onClick={showElement.bind(null, el.title)}>Return</button>\n                      <button onClick={deleteElement.bind(null, el.id)}>Close</button>\n                    </div>\n                  </div>\n                </Portal>\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}